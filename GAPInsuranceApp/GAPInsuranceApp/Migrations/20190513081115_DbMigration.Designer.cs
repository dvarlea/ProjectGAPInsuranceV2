// <auto-generated />
using System;
using GAPInsuranceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GAPInsuranceApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190513081115_DbMigration")]
    partial class DbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GAPInsuranceApp.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Begining");

                    b.Property<int>("ClientId");

                    b.Property<double>("CoverageAmt");

                    b.Property<string>("Coverages");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("Risk");

                    b.Property<int>("TimePeriod");

                    b.HasKey("Id");

                    b.ToTable("Insurances");

                    b.HasData(
                        new
                        {
                            Id = 999999,
                            Begining = new DateTime(2019, 5, 13, 2, 11, 15, 182, DateTimeKind.Local).AddTicks(9723),
                            ClientId = 123456789,
                            CoverageAmt = 0.59999999999999998,
                            Coverages = "Accidente, Robo",
                            Description = "Seguro de Auto de Juan Rodriguez",
                            Name = "Seguro de Auto",
                            Price = 230000.0,
                            Risk = 3,
                            TimePeriod = 6
                        },
                        new
                        {
                            Id = 999998,
                            Begining = new DateTime(2019, 5, 13, 2, 11, 15, 183, DateTimeKind.Local).AddTicks(8347),
                            ClientId = 123456789,
                            CoverageAmt = 0.5,
                            Coverages = "Incendio, Robo",
                            Description = "Seguro de Vivienda de Juan Rodriguez",
                            Name = "Seguro de Vivienda",
                            Price = 500000.0,
                            Risk = 1,
                            TimePeriod = 12
                        });
                });

            modelBuilder.Entity("GAPInsuranceApp.Models.User", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 123456789,
                            LastName = "Rodrigues",
                            Name = "Juan",
                            Role = 1,
                            Username = "GAPTest"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
